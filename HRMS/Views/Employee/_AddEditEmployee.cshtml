@using System.Security.Claims
@model HRMS.Models.Employee.EmployeeDetailsModel

@{
    ViewData["Title"] = "Employee";
    var action = @Model.EmployeeId > 0 ? "Edit" : "Add";
}

@{
    await Html.RenderPartialAsync("_Sidebar");
}

<!-- Layout container -->
<div class="layout-page">
    <!-- Content wrapper -->
    <div class="content-wrapper">
        <!-- Content -->

        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="row">
                <div class="col-md-12">
                    <div id="messageDiv" class="alert alert-info alert-dismissible" role="alert" style="display: none">
                        @Html.ValidationSummary()
                        @ViewBag.SuccessMsg
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <div class="card mb-4">
                        <h5 class="card-header">Profile Details</h5>
                        <!-- Account -->
                        <form id="formAccountSettings" asp-action="@action" asp-controller="Employee" method="POST">
                            @Html.AntiForgeryToken()
                            <div class="card-body">
                                <div class="d-flex align-items-start align-items-sm-center gap-4">
                                    <img src="~/images/profile1.jpg" alt="user-avatar" class="d-block rounded" height="100"
                                         width="100" id="uploadedAvatar" />
                                    <div class="button-wrapper" style="visibility:hidden">
                                        <label for="upload" class="btn btn-primary me-2 mb-4" tabindex="0">
                                            <span class="d-none d-sm-block">Upload new photo</span>
                                            <i class="bx bx-upload d-block d-sm-none"></i>
                                            <input type="file" id="upload" class="account-file-input" hidden
                                                   accept="image/png, image/jpeg" />
                                        </label>
                                        <button type="button" class="btn btn-outline-secondary account-image-reset mb-4">
                                            <i class="bx bx-reset d-block d-sm-none"></i>
                                            <span class="d-none d-sm-block">Reset</span>
                                        </button>

                                        <p class="text-muted mb-0">Allowed JPG, GIF or PNG. Max size of 800K</p>
                                    </div>
                                    @if (User.FindFirstValue(ClaimTypes.Role) != null && User.FindAll(ClaimTypes.Role).Any(r => r.Value == "Admin"))
                                    {
                                        <div class="form-check btn-pinned" style="top: 5.75rem;right: 21rem;">
                                            @Html.CheckBoxFor(model=> model.IsManger, new { @class="form-check-input"})
                                            @Html.LabelFor(model=> model.IsManger, "Is a manager", new { @class="form-check-label form-label"})
                                        </div>
                                    }
                                </div>
                            </div>
                            <hr class="my-0" />
                            <div class="card-body">
                                @Html.HiddenFor(model=> model.EmployeeId)
                                <div class="row">
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.FirstName, "First Name", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.FirstName, new { @class="form-control", maxlength="50", required="required"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.LastName, "Last Name", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.LastName, new { @class="form-control", maxlength="50", required="required"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.Email, "Email", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.Email, new { @class="form-control", type="email", maxlength="50", required="required"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.PhoneNumber, "Phone Number", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.PhoneNumber, new { @class="form-control", maxlength="20"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.DateOfBirth, "Date of Birth", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.DateOfBirthStr, new { @class="form-control", type="date"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.Nationality, "Nationality", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.Nationality, new { @class="form-control", maxlength="20"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.BloodGroup, "Blood Group", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.BloodGroup, new { @class="form-control", maxlength="5"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.Gender, "Gender", new { @class="form-label"})
                                        @Html.DropDownListFor(mode=> mode.Gender, new List<SelectListItem>()
                                        {
                                        new SelectListItem()
                                        {
                                        Value = "M",
                                        Text = "Male"
                                        },
                                        new SelectListItem()
                                        {
                                        Value = "F",
                                        Text = "Female"
                                        }
                                        }, new { @class="form-select"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.NID, "NID", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.NID, new { @class="form-control", maxlength="15"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.PassportNo, "Passport No", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.PassportNo, new { @class="form-control", maxlength="15"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.TIN, "TIN", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.TIN, new { @class="form-control", maxlength="15"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.TaxCircel, "Tax Circle", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.TaxCircel, new { @class="form-control", maxlength="50"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.TaxZone, "Tax zone", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.TaxZone, new { @class="form-control", maxlength="50"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.MaritalStatus, "Marital Status", new { @class="form-label"})
                                        @Html.DropDownListFor(mode=> mode.MaritalStatus, new List<SelectListItem>()
                                        {
                                        new SelectListItem()
                                        {
                                        Value = "0",
                                        Text = "Unmarried"
                                        },
                                        new SelectListItem()
                                        {
                                        Value = "1",
                                        Text = "Married"
                                        }
                                        }, new { @class="form-select"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.Religion, "Religion", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.Religion, new { @class="form-control", maxlength="2-"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.PersonalEmail, "Personal Email", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.PersonalEmail, new { @class="form-control", maxlength="50"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.PersonalPhone, "Personal Phone", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.PersonalPhone, new { @class="form-control", maxlength="15"})
                                    </div>
                                    <div class="mb-3 col-md-6 col-lg-4">
                                        @Html.LabelFor(model=> model.PersonalMobile, "Personal Mobile", new { @class="form-label"})
                                        @Html.TextBoxFor(model=> model.PersonalMobile, new { @class="form-control", maxlength="15"})
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <button type="submit" class="btn btn-primary me-2"><i class="fa fa-save"></i> Save changes</button>
                                    <button type="reset" class="btn btn-outline-secondary">Cancel</button>
                                </div>
                            </div>
                        </form>
                        <!-- /Account -->
                    </div>
                    <div class="card mb-4">
                        <h5 class="card-header">Work</h5>
                        <hr class="my-0" />
                        <div class="card-body">
                            <div class="text-nowrap">
                                <table class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Effective date</th>
                                            <th>Job title</th>
                                            <th>Reports to</th>
                                            <th>Changed type</th>
                                            <th>Reason</th>
                                            <th>Changed by</th>
                                            @if (User.FindFirstValue(ClaimTypes.Role) != null && User.FindAll(ClaimTypes.Role).Any(r => r.Value == "Admin"))
                                            {
                                                <th>Actions</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody class="table-border-bottom-0">
                                        @{
                                            foreach (var his in Model.WorkHistoryDetails)
                                            {
                                                <tr>
                                                    <td>@(((DateTime)his.EffectiveDate).ToString("dd/MM/yyyy"))</td>
                                                    <td>@his.Designation</td>
                                                    <td>@his.ManagerName</td>
                                                    <td>@his.ChangedType</td>
                                                    <td>@his.Reason</td>
                                                    <td>@his.ModifiedBy</td>
                                                    @if (User.FindFirstValue(ClaimTypes.Role) != null && User.FindAll(ClaimTypes.Role).Any(r => r.Value == "Admin"))
                                                    {
                                                        <td>
                                                            <div class="dropdown">
                                                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow"
                                                                data-bs-toggle="dropdown">
                                                                    <i class="fas fa-ellipsis-v"></i>
                                                                </button>
                                                                <div class="dropdown-menu">
                                                                    <a class="dropdown-item" href="javascript:void(0);">
                                                                        <i class="bx bx-edit-alt me-1"></i> Edit
                                                                    </a>
                                                                    <a class="dropdown-item" href="javascript:void(0);">
                                                                        <i class="bx bx-trash me-1"></i> Delete
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                            @if (User.FindFirstValue(ClaimTypes.Role) != null && User.FindAll(ClaimTypes.Role).Any(r => r.Value == "Admin"))
                            {
                                <div class="mt-4">
                                    <button type="submit" class="btn btn-primary me-2"><i class="fa fa-plus" aria-hidden="true"></i> Add New Work History</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- / Content -->

        <div class="content-backdrop fade"></div>
    </div>
    <!-- Content wrapper -->
</div>
<!-- / Layout page -->

<script>
    var isSuccess = '@ViewBag.Success';
</script>